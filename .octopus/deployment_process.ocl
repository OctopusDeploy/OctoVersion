step "push" {
    name = "Push"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                # Build the path to nuget.exe
                
                
                # nuget push
                dotnet nuget push "$($OctopusParameters["Octopus.Action.Package[Octopus.OctoVersion.Core].PackageFileName"])" --source $FeedUrl --api-key $FeedApiKey --skip-duplicate
                dotnet nuget push "$($OctopusParameters["Octopus.Action.Package[Octopus.OctoVersion.Tool].PackageFileName"])" --source $FeedUrl --api-key $FeedApiKey --skip-duplicate
                dotnet nuget push "$($OctopusParameters["Octopus.Action.Package[Cake.OctoVersion].PackageFileName"])" --source $FeedUrl --api-key $FeedApiKey --skip-duplicate
                
                
                
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "hosted-ubuntu"

        container {
            feed = "docker-hub"
            image = "octopusdeploy/worker-tools:6-ubuntu.22.04"
        }

        packages "Octopus.OctoVersion.Tool" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "Octopus.OctoVersion.Tool"
            properties = {
                Extract = "False"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }

        packages "Octopus.OctoVersion.Core" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "Octopus.OctoVersion.Core"
            properties = {
                Extract = "False"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }

        packages "Cake.OctoVersion" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "Cake.OctoVersion"
            properties = {
                Extract = "False"
                SelectionMode = "immediate"
            }
        }
    }
}

step "notify-slack-on-failure" {
    condition = "Failure"
    name = "Notify slack on failure"

    action {
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-1565"
            Octopus.Action.Template.Version = "6"
            ssn_Channel = "#{Slack.DeploymentNotificationChannel}"
            ssn_Color = "danger"
            ssn_HookUrl = "#{Slack.Webhook}"
            ssn_IconUrl = "https://octopus.com/content/resources/favicon.png"
            ssn_Message = "The *OctoVersion* release `#{Octopus.Release.Number}` <#{Octopus.Web.ServerUri}#{Octopus.Web.DeploymentLink}|failed to deploy> to #{Octopus.Environment.Name}. Please investigate!"
            ssn_Title = "OctoVersion deployment failed"
            ssn_TreatInputAsMarkdown = "True"
            ssn_Username = "Octopus Deploy"
        }
        worker_pool = "hosted-ubuntu"
    }
}