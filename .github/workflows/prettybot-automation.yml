name: "Prettybot Automation"

on:
    push:
        branches:
            - main
    pull_request:
      branches:
        - main
      
# Increase the access for the GITHUB_TOKEN
permissions:
    # This Allows the GITHUB_TOKEN to approve pull requests
    pull-requests: write
    # This Allows the GITHUB_TOKEN to auto merge pull requests
    contents: write

env:
    PR_URL: ${{github.event.pull_request.html_url}}
    # By default, GitHub Actions workflows triggered by Dependabot get a GITHUB_TOKEN with read-only permissions.
    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    BRANCH_NAME: prettybot/automation-${{ github.run_number }}

jobs:
    create-pr:
        runs-on: ubuntu-latest
        concurrency:
            group: prettybot
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Create new branch
              run: |
                  git checkout -b ${{ env.BRANCH_NAME }}

            - name: Log in to Docker Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ secrets.INTERNAL_DOCKER_REGISTRY_URL }}
                  username: ${{ secrets.INTERNAL_DOCKER_READ_ONLY_USER_NAME }}
                  password: ${{ secrets.INTERNAL_DOCKER_READ_ONLY_ACCESS_TOKEN }}
            - name: Run Cleanup Code
              run: |
                docker run --help
                docker run -v ${{ github.workspace }}:/src ${{ secrets.INTERNAL_DOCKER_REGISTRY_URL }}/octopusdeploy/tool-containers/tool-resharper-cli "/scripts/prettybot.sh"
            - name: Git Check for file changes
              id: git-check
              run: |
                  if git status --porcelain ; then
                    echo "changed=true" >> $GITHUB_OUTPUT
                  else
                    echo "changed=false" >> $GITHUB_OUTPUT
                  fi

            - name: Commit and push changes
              if: steps.git-check.outputs.changed == 'true'
              run: |
                  git commit -am "Run ReSharper code cleanup"
                  git push origin ${{ env.BRANCH_NAME }}

            - name: Create Pull Request
              if: steps.git-check.outputs.changed == 'true'
              run: |
                  gh pr create --base main --head ${{ env.BRANCH_NAME }} --title "Automated PR for Prettybot" --body "This is an automated PR."
